@using System.Drawing
@using Highcharts4Net
@using Highcharts4Net.Library.Enums
@using Highcharts4Net.Library.Helpers
@using Highcharts4Net.Library.Options
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Area charts » Percentage area";
}

@Html.Highcharts4Net().AreaChart(settings =>
{
    settings.SetTitle(s => s.Text = "Historic and Estimated Worldwide Population Distribution by Region");

    settings.SetSubtitle(s => s.Text = "Source: Wikipedia.org");

    settings.AddXAxis(s =>
    {
        s.Categories = new[]
        {
            "1750", "1800", "1850", "1900", "1950", "1999", "2050"
        };
        s.TickmarkPlacement = Placement.On;
        s.Title = new XAxisTitle
        {
            Enabled = false
        };
    });
    settings.AddYAxis(s =>
    {
        s.Title = new YAxisTitle
        {
            Text = "Percent"
        };
    });

    settings.SetTooltip(s =>
    {
        s.Shared = true;
        s.PointFormat = "<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.percentage:.1f}%</b> ({point.y:,.0f} millions)<br/>";
    });

    settings.SetPlotOptions(s =>
    {
        s.Area = new PlotOptionsArea
        {
            Stacking = Stackings.Percent,
            LineColor = Color.FromArgb(100, 255, 255, 255).ToHexString(),
            LineWidth = 1,
            Marker = new PlotOptionsAreaMarker
            {
                LineWidth = 1,
                LineColor = Color.FromArgb(100, 255, 255, 255).ToHexString()
            }
        };
    });

    settings.AddSeries(s =>
    {
        s.Name = "Asia";
        s.Data = new Data(new HighchartsDataPoint?[]
        {
                502,635,809,947,1402,3634,5268
        });
    });
    settings.AddSeries(s =>
    {
        s.Name = "Africa";
        s.Data = new Data(new HighchartsDataPoint?[]
        {
                106,107,111,133,221,767,1766
        });
    });
    settings.AddSeries(s =>
    {
        s.Name = "Europe";
        s.Data = new Data(new HighchartsDataPoint?[]
        {
                163,203,276,408,547,729,628
        });
    });
    settings.AddSeries(s =>
    {
        s.Name = "America";
        s.Data = new Data(new HighchartsDataPoint?[]
        {
                18,31,54,156,339,818,1201
        });
    });
    settings.AddSeries(s =>
    {
        s.Name = "Oceania";
        s.Data = new Data(new HighchartsDataPoint?[]
        {
                2,2,2,6,13,30,46
        });
    });
}).Render()

@section source_code{
@@Html.Highcharts4Net().AreaChart(settings =>
{
    settings.SetTitle(s => s.Text = "Historic and Estimated Worldwide Population Distribution by Region");

    settings.SetSubtitle(s => s.Text = "Source: Wikipedia.org");

    settings.AddXAxis(s =>
    {
        s.Categories = new[]
        {
            "1750", "1800", "1850", "1900", "1950", "1999", "2050"
        };
        s.TickmarkPlacement = Placement.On;
        s.Title = new XAxisTitle
        {
            Enabled = false
        };
    });
    settings.AddYAxis(s =>
    {
        s.Title = new YAxisTitle
        {
            Text = "Percent"
        };
    });

    settings.SetTooltip(s =>
    {
        s.Shared = true;
        s.PointFormat = "&lt;span style=\"color:{series.color}\">{series.name}&lt;/span>: &lt;b>{point.percentage:.1f}%&lt;/b> ({point.y:,.0f} millions)&lt;br />"
    });

    settings.SetPlotOptions(s =>
    {
        s.Area = new PlotOptionsArea
        {
            Stacking = Stackings.Percent,
            LineColor = Color.FromArgb(100, 255, 255, 255).ToHexString(),
            LineWidth = 1,
            Marker = new PlotOptionsAreaMarker
            {
                LineWidth = 1,
                LineColor = Color.FromArgb(100, 255, 255, 255).ToHexString()
            }
        };
    });

    settings.AddSeries(s =>
    {
        s.Name = "Asia";
        s.Data = new Data(new HighchartsDataPoint?[]
        {
                502,635,809,947,1402,3634,5268
        });
    });
    settings.AddSeries(s =>
    {
        s.Name = "Africa";
        s.Data = new Data(new HighchartsDataPoint?[]
        {
                106,107,111,133,221,767,1766
        });
    });
    settings.AddSeries(s =>
    {
        s.Name = "Europe";
        s.Data = new Data(new HighchartsDataPoint?[]
        {
                163,203,276,408,547,729,628
        });
    });
    settings.AddSeries(s =>
    {
        s.Name = "America";
        s.Data = new Data(new HighchartsDataPoint?[]
        {
                18,31,54,156,339,818,1201
        });
    });
    settings.AddSeries(s =>
    {
        s.Name = "Oceania";
        s.Data = new Data(new HighchartsDataPoint?[]
        {
                2,2,2,6,13,30,46
        });
    });
}).Render()
}